# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release Build

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven
    - name: Set up Maven 3.9.x
      uses: s4u/setup-maven-action@v1.12.0
      with:
        maven-version: '3.9.5'
    - name: Build and Deploy with Maven
      run: |
        git config --global user.email "info@funfried.de"
        git config --global user.name "funfried"
        echo ${{ secrets.GPG_SIGNING_SECRET_KEY }} | base64 --decode | gpg --batch --import
        echo ${{ secrets.GPG_SIGNING_OWNERTRUST }} | base64 --decode | gpg --import-ownertrust
        mvn -s .ci.settings.xml --no-transfer-progress -Prelease-commons,sonatype-oss-release clean deploy site site:stage scm-publish:publish-scm
      env:
        GPG_TTY: $(tty)
        MAVEN_OPTS: -Xms128m -Xmx512m
        gh_username: ${{ secrets.GH_USERNAME }}
        gh_token: ${{ secrets.GH_TOKEN }}
        sonatype_username: ${{ secrets.SONATYPE_USERNAME }}
        sonatype_password: ${{ secrets.SONATYPE_PASSWORD }}
        repoToken: ${{ secrets.COVERALLS_REPOTOKEN }}
        signing_keypass: ${{ secrets.GPG_PASSPHRASE }}
        skipRemoteStaging: ${{ secrets.SKIP_REMOTE_STAGING }}
        nvd_api_key: ${{ secrets.NVD_API_KEY }}
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: funfried/zonky-maven-plugin
